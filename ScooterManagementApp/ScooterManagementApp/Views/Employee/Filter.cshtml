@model ScooterManagementApp.Models.EmployeeFilterViewModel
@using X.PagedList.Mvc.Core;
@using X.PagedList;


@{
    ViewData["Title"] = "Filter";
}

<h1>Filter</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Filter" method="get" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Position" class="control-label"></label>
                <input asp-for="Position" class="form-control" />
                <span asp-validation-for="Position" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StationId" class="control-label"></label>
                <input asp-for="StationId" class="form-control" />
                <span asp-validation-for="StationId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Employee Id
            </th>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                @Html.ActionLink("Date Employed", "Filter", new { Page = Model.Page, SortField = "DateEmployed", SortDesc = !Model.SortDesc })
            </th>
            <th>
                @Html.ActionLink("Position", "Filter", new { Page = Model.Page, SortField = "Position", SortDesc = !Model.SortDesc })
            </th>
            <th>
                Salary
            </th>
            <th>
                @Html.ActionLink("Station Id", "Filter", new { Page = Model.Page, SortField = "StationId", SortDesc = !Model.SortDesc })
            </th>
            <th>
                Station Address
            </th>
            <th>
                Total Repairs
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employees) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateEmployed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StationId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StationAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalRepairs)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.EmployeeId }) |
                @Html.ActionLink("Details", "Details", new { id=item.EmployeeId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.EmployeeId })
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager(
    Model.Employees, 
    page => Url.Action("Filter", 
        new { 
            Page = page, 
            SortField = Model.SortField, 
            SortDesc = Model.SortDesc, 
            DateEmployed = Model.Date, 
            Position = Model.Position,
            StationId = Model.StationId,
            PageSize = Model.PageSize,
            TotalCount = Model.TotalCount
        }))